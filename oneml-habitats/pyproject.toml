[tool.poetry]
name = "oneml-habitats"
# Handled by `poetry-dynamic-versioning` plugin below.
version = "0.0.0"
description = "oneml plugin component for running pipelines in habitats"
readme = "README.md"
authors = []
packages = [
    {include = "oneml", from = "src/python"},
]

[[tool.poetry.source]]
name = "immunomics-artifacts"
url = "https://pkgs.dev.azure.com/immunomics/_packaging/immunomics-artifacts/pypi/simple"
priority = "default"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "pep440"
bump = true
dirty = false
# This would allow us to publish from PR builds but Azure Devops artifacts lack support:
# https://developercommunity.visualstudio.com/t/local-version-segments-for-python-package-feeds/892057
metadata = false

[tool.poetry.dependencies]
furl = "^2.1.3"
immunodata-core = "*"
immunodata-cli = "*"
immunodata-devops = "*"
immunodata-datasets = "*"
immunodata-workflows = "*"
numpy = "*"
oneml-pipelines = "*"
oneml-processors = "*"
pandas = "*"
python = ">=3.8.10,<3.11"
pandas-stubs = "*"
pyarrow = "^12.0.1"

[tool.poetry.extras]
dev = []

[tool.poetry.group.dev.dependencies]
oneml-devtools = { path = "../oneml-devtools/", develop = true }
oneml-pipelines = { path = "../oneml-pipelines/", develop = true }
oneml-processors = { path = "../oneml-processors/", develop = true }
black = "*"
coverage = "*"
flake8 = "*"
flake8-formatter-junit-xml = "*"
flake8-isort = "*"
isort = "*"
mypy = "*"
pandas-stubs = "*"
pytest = "*"
pytest-cov = "*"
pytest-nunit = "*"
pyupgrade = "*"
types-urllib3 = "*"

[tool.poetry.plugins."immunocli.plugins"]
"oneml-habitats" = "oneml.habitats.immunocli._plugin:OnemlHabitatsCliPlugin.factory"

[tool.poetry.plugins."oneml.app_plugins"]
"oneml.habitats-plugin" = "oneml.habitats.plugin:OnemlHabitatsPlugin"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 99

[tool.isort]
line_length = 99
profile = "black"
src_paths = "src/python"
known_first_party = ["oneml"]

[tool.mypy]
packages = ["oneml", "oneml_test"]
cache_dir = "../.tmp/oneml-habitats/.mypy_cache"
namespace_packages = true
mypy_path = "src/python/:test/python/"
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
# Disabling this check, it fails if we subclass untyped classes (luigi.Task)
disallow_subclassing_any = false
warn_no_return = true
strict_optional = true
strict_equality = true
no_implicit_optional = true
disallow_any_generics = true
disallow_any_unimported = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_unused_configs = true
show_traceback = true
show_error_codes = true
show_column_numbers = true

[[tool.mypy.overrides]]
module = [
    "pydot.*",
    "furl.*",
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pulumi_azure_native.*"
ignore_missing_imports = true
follow_imports = "skip"

[tool.coverage.run]
branch = true
data_file = "../.tmp/oneml-habitats/.coverage"
# Root namespace package folder here ensures coverage will include files with 0% coverage
source = ["src/python/oneml"]
relative_files = true

[tool.coverage.report]
show_missing = true

[tool.coverage.xml]
output = "../.tmp/oneml-habitats/reports/coverage.xml"

[tool.pytest.ini_options]
cache_dir = "../.tmp/oneml-habitats/.pytest_cache"
testpaths = ["test/python"]
addopts = """
    --cov --cov-report=term
    --cov-report=xml
    --junit-xml ../.tmp/oneml-habitats/reports/pytest-junit.xml
    --capture=no
    --cache-clear
"""
