name: Release
on:
  workflow_call:
    inputs:
      sha:
        description: 'the git sha to checkout'
        required: true
        type: string
      publish-docs:
        description: 'whether to publish docs to the github pages'
        required: true
        type: boolean
      publish-wheels:
        description: 'whether to publish wheels to the configured feed'
        required: true
        type: boolean
      publish-to-github:
        description: 'whether to create a github release'
        required: true
        type: boolean
jobs:
  publish-wheels:
    name: "publish-wheels"
    runs-on: "ubuntu-latest"
    if: "${{ inputs.publish-wheels }}"
    strategy:
      fail-fast: false
      matrix:
        component:
          - rats-apps
          - rats-devtools
    environment:
      name: pypi
      url: https://pypi.org/p/${{ matrix.component }}
    permissions:
      id-token: write
    steps:
      - name: download-wheels
        uses: actions/download-artifact@v4
        with:
          name: "wheels.${{ matrix.component }}"
          path: dist/
      - name: publish-wheels
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
  publish-to-github:
    name: "publish-to-github"
    runs-on: "ubuntu-latest"
    if: "${{ inputs.publish-to-github }}"
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha }}
          fetch-depth: 0
          fetch-tags: true
      - uses: ./.github/actions/setup-environment
        id: runner-context
        with:
          install-poetry: false
          install-devtools: false
      - name: "create-release"
        env:
          PACKAGE_VERSION: "${{ steps.runner-context.outputs.package-version }}"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMIT_REF: "${{ github.head_ref || github.ref_name }}"
          TARGET: ${{ github.sha }}
        run: |
          if  [[ $COMMIT_REF == "v${PACKAGE_VERSION}" ]] ;
          then
            echo "detected tag build: $COMMIT_REF"
            gh release create "v${PACKAGE_VERSION}" \
              --target "$TARGET" \
              --title "$PACKAGE_VERSION" \
              --draft \
              --generate-notes
          else
            echo "detected main branch build"
            echo "will generate a pre-release"
            gh release create "v${PACKAGE_VERSION}" \
              --target "$TARGET" \
              --title "$PACKAGE_VERSION" \
              --draft \
              --prerelease \
              --generate-notes
          fi
  publish-docs:
    name: "deploy-docs"
    runs-on: "ubuntu-latest"
    if: "${{ inputs.publish-docs }}"
    timeout-minutes: 10
    steps:
      - name: "deploy-gh-pages"
        id: deployment
        uses: actions/deploy-pages@v4
