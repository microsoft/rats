from typing import Any, NamedTuple

from rats import app_context


class RuntimeDetails(NamedTuple):
    job_name: str
    """The aml job name, often generated by the aml apis."""

    app_ids: tuple[str, ...]
    """The app ids being run by the aml job."""

    context: app_context.Collection[Any]
    """The context collection that was submitted to the remote aml job."""

    wait: bool
    """Whether the application will wait for the completion of the aml job before returning."""


class RuntimeDetailsClient:
    """
    Details of the aml job running as part of an instance of [rats.aml.Application][].

    These details are only populated after a job has been submitted to aml, and contains the
    information needed to retrieve or update the job.
    """

    _details: RuntimeDetails | None

    def __init__(self) -> None:
        self._details = None

    def set(self, details: RuntimeDetails) -> None:
        if self._details is not None:
            raise DetailsAlreadySetError()

        self._details = details

    def get(self) -> RuntimeDetails:
        if self._details is None:
            raise DetailsNotAvailableError()

        return self._details


class DetailsNotAvailableError(RuntimeError):
    def __init__(self) -> None:
        super().__init__("Aml runtime details not yet available.")


class DetailsAlreadySetError(RuntimeError):
    def __init__(self) -> None:
        super().__init__("Aml runtime details cannot be set more than once.")
