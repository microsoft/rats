# THIS FILE WAS GENERATED BY IMMUNODATA PLATFORM LIBRARIES.
# EDIT WITH CAUTION!

parameters:
  - name: appBuilderImageName
    type: string
  - name: appBuilderImageTag
    type: string
  - name: component
    type: string
    values:
    - oneml-devtools
    - oneml-habitats
    - oneml-pipelines
    - oneml-processors
  - name: isDevBuild
    type: boolean
  - name: python_dependency_tool
    type: string
    values:
    - "poetry"

jobs:
- job:
  displayName: "Check-All: ${{ parameters.component }}"
  pool:
    vmImage: "ubuntu-latest"

  steps:
  - checkout: self
    submodules: true
  - script: |
      mkdir -p .tmp/artifacts
    displayName: "Artifacts Directory"

  - template: /.azure-pipelines/templates/steps.validate-submodule.yaml
  - template: /.azure-pipelines/templates/steps.authenticate.yaml
  - template: /.azure-pipelines/templates/steps.define-build-variables.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      isDevBuild: ${{ parameters.isDevBuild }}

  - ${{ if eq(parameters.python_dependency_tool, 'poetry') }}:
    - template: /.azure-pipelines/templates/steps.immunodata-app-builder.command.yaml
      parameters:
        builderImage: ${{ parameters.appBuilderImageName }}:${{ parameters.appBuilderImageTag }}
        command: "immunocli-next -vvv ci poetry-install --component ${{ parameters.component }} --path $PWD"
        name: Poetry Install
        retryCountOnTaskFailure: 1

  - template: /.azure-pipelines/templates/steps.immunodata-app-builder.command.yaml
    parameters:
      builderImage: ${{ parameters.appBuilderImageName }}:${{ parameters.appBuilderImageTag }}
      command: "immunocli-next -vvv ci check-all ${{ parameters.component }} --path $PWD"
      name: Check All

  - template: /.azure-pipelines/templates/steps.publish-reports.yaml
    parameters:
      junit_path: '.tmp/${{ parameters.component }}/reports/*-junit.xml'
      coverage_path: '.tmp/${{ parameters.component }}/reports/coverage.xml'

  - publish: ".tmp/artifacts"
    artifact: "ci.artifacts.${{ parameters.component }}.tox"
    displayName: "Publish: .tmp/artifacts"
