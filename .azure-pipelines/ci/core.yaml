# THIS FILE WAS GENERATED BY IMMUNODATA PLATFORM LIBRARIES.
# EDIT WITH CAUTION!

trigger:
  batch: true
  branches:
    include:
    - "main"
  tags:
    include:
    - "v*"

pr: none

parameters:
  - name: appBuilderImageName
    type: string
    default: "immunodata.azurecr.io/immunodata-app-builder"
  - name: appBuilderImageTag
    type: string
    default: "2023-07-10.22-15-57"

stages:
- stage: CI
  jobs:

# APPLICATIONS
# oneml-devtools
  - template: /.azure-pipelines/templates/jobs.application-ci.check-all.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      component: "oneml-devtools"
      # This is a production build
      isDevBuild: false
      python_dependency_tool: "poetry"
  # We generate the wheel even if it doesn't get published so that we catch issues in `setup.py` early.
  - template: /.azure-pipelines/templates/jobs.application-ci.wheel.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      component: "oneml-devtools"
      publishWheel: false
      # This is a production build
      isDevBuild: false
      python_dependency_tool: "poetry"
  - template: /.azure-pipelines/templates/jobs.application-ci.docker.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      component: "oneml-devtools"
      # This is a production build
      isDevBuild: false
      namespace: "production"
      python_dependency_tool: "poetry"
# oneml-habitats
  - template: /.azure-pipelines/templates/jobs.application-ci.check-all.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      component: "oneml-habitats"
      # This is a production build
      isDevBuild: false
      python_dependency_tool: "poetry"
  # We generate the wheel even if it doesn't get published so that we catch issues in `setup.py` early.
  - template: /.azure-pipelines/templates/jobs.application-ci.wheel.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      component: "oneml-habitats"
      publishWheel: true
      # This is a production build
      isDevBuild: false
      python_dependency_tool: "poetry"
# oneml-pipelines
  - template: /.azure-pipelines/templates/jobs.application-ci.check-all.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      component: "oneml-pipelines"
      # This is a production build
      isDevBuild: false
      python_dependency_tool: "poetry"
  # We generate the wheel even if it doesn't get published so that we catch issues in `setup.py` early.
  - template: /.azure-pipelines/templates/jobs.application-ci.wheel.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      component: "oneml-pipelines"
      publishWheel: true
      # This is a production build
      isDevBuild: false
      python_dependency_tool: "poetry"
# oneml-processors
  - template: /.azure-pipelines/templates/jobs.application-ci.check-all.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      component: "oneml-processors"
      # This is a production build
      isDevBuild: false
      python_dependency_tool: "poetry"
  # We generate the wheel even if it doesn't get published so that we catch issues in `setup.py` early.
  - template: /.azure-pipelines/templates/jobs.application-ci.wheel.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      component: "oneml-processors"
      publishWheel: true
      # This is a production build
      isDevBuild: false
      python_dependency_tool: "poetry"

  # # build Documentations
  - template: /.azure-pipelines/templates/jobs.docs.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      driverComponent: "oneml-processors"
      isDevBuild: false

- stage: BM
  dependsOn: CI
  condition: succeeded('CI')
  displayName: Build Marker
  jobs:
  - template: /.azure-pipelines/templates/jobs.build-dataset-marker.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      isDevBuild: false
      project: "oneml"
      namespace: production

