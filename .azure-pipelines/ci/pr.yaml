# This pipeline triggers with branch strategies (unfortunately not configurable through yaml yet)
trigger: none
pr: none

parameters:
  - name: appBuilderImageName
    type: string
    default: "immunodata.azurecr.io/immunodata-app-builder"
  - name: appBuilderImageTag
    type: string
    default: "2022-10-21.19-47-38"

stages:
- stage: CI
  jobs:

# APPLICATIONS
# oneml-app
  - template: /.azure-pipelines/templates/jobs.application-ci.check-all.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      component: "oneml-app"
      toxEnvs: "{.python-version},cilint,citype"
      isDevBuild: true
      python_dependency_tool: "poetry"
  # We generate the wheel even if it doesn't get published so that we catch issues in `setup.py` early.
  - template: /.azure-pipelines/templates/jobs.application-ci.wheel.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      component: "oneml-app"
      # PR builds never publish wheels
      publishWheel: false
      isDevBuild: true
      python_dependency_tool: "poetry"
  - template: /.azure-pipelines/templates/jobs.application-ci.docker.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      component: "oneml-app"
      isDevBuild: true
      namespace: "ci-pr-builds"
      python_dependency_tool: "poetry"
# oneml-devtools
  - template: /.azure-pipelines/templates/jobs.application-ci.check-all.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      component: "oneml-devtools"
      toxEnvs: "{.python-version},cilint,citype"
      isDevBuild: true
      python_dependency_tool: "poetry"
  # We generate the wheel even if it doesn't get published so that we catch issues in `setup.py` early.
  - template: /.azure-pipelines/templates/jobs.application-ci.wheel.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      component: "oneml-devtools"
      # PR builds never publish wheels
      publishWheel: false
      isDevBuild: true
      python_dependency_tool: "poetry"
  - template: /.azure-pipelines/templates/jobs.application-ci.docker.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      component: "oneml-devtools"
      isDevBuild: true
      namespace: "ci-pr-builds"
      python_dependency_tool: "poetry"
# oneml-pipelines
  - template: /.azure-pipelines/templates/jobs.application-ci.check-all.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      component: "oneml-pipelines"
      toxEnvs: "{.python-version},cilint,citype"
      isDevBuild: true
      python_dependency_tool: "poetry"
  # We generate the wheel even if it doesn't get published so that we catch issues in `setup.py` early.
  - template: /.azure-pipelines/templates/jobs.application-ci.wheel.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      component: "oneml-pipelines"
      # PR builds never publish wheels
      publishWheel: false
      isDevBuild: true
      python_dependency_tool: "poetry"
# oneml-processors
  - template: /.azure-pipelines/templates/jobs.application-ci.check-all.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      component: "oneml-processors"
      toxEnvs: "{.python-version},cilint,citype"
      isDevBuild: true
      python_dependency_tool: "poetry"
  # We generate the wheel even if it doesn't get published so that we catch issues in `setup.py` early.
  - template: /.azure-pipelines/templates/jobs.application-ci.wheel.yaml
    parameters:
      appBuilderImageName: ${{ parameters.appBuilderImageName }}
      appBuilderImageTag: ${{ parameters.appBuilderImageTag }}
      component: "oneml-processors"
      # PR builds never publish wheels
      publishWheel: false
      isDevBuild: true
      python_dependency_tool: "poetry"


- stage: BM
  dependsOn: CI
  condition: succeeded('CI')
  displayName: Build Marker
  jobs:
  - template: /.azure-pipelines/templates/jobs.build-dataset-marker.yaml
    parameters:
      builderImage: ${{ parameters.appBuilderImageName }}:${{ parameters.appBuilderImageTag }}
      project: "oneml"
      namespace: ci-pr-builds

